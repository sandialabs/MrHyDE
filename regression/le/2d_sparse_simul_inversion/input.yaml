%YAML 1.1
---
ANONYMOUS:
  verbosity: 0
  debug level: 0
  Mesh:
    blocknames: eblock-0_0
    dimension: 2
    Source: Exodus
    mesh file: input_mesh_dp1_n2.exo
    have element data: true
    have nodal data: false
    use measurements as DBCs: false
  Physics: 
    incplanestress: true
    use log E: false
    modules: linearelasticity
    Dirichlet conditions:
      scalar data: true
      dx:
        bottom: 0.0
      dy:
        bottom: 0.0
    Neumann conditions:
      dx:
        top: 'xtrac'
      dy:
        top: 'ytrac'
    Initial conditions:
      scalar data: true
      dx: 0.0
      dy: 0.0
  Discretization:
    order:
      dx: 1
      dy: 1
    quadrature: 2
  Solver:
    workset size: 1
    solver: steady-state
  Postprocess: 
    response type: pointwise
    compute response: false
    compute objective: true
    write solution: false
    Objective functions:
      obj0:
        type: sensors
        sensor points file: mesh
        sensor data file: 'sensor_1_Val_1'
        response: dx
        weight: 0.5
        Regularization functions:
          regv0:
            type: integrated
            location: volume
            function: 'sqrt(gradmus + 1.0e-10)'
            weight: 1.0e-3
          regb0:
            type: integrated
            location: boundary
            boundary name: top
            function: 'grad(xtrac)[x]*grad(xtrac)[x]'
            weight: 0.5e-4
          regb1:
            type: integrated
            location: boundary
            boundary name: top
            function: 'grad(ytrac)[x]*grad(ytrac)[x]'
            weight: 0.5e-4
      obj1:
        type: sensors
        sensor points file: mesh
        sensor data file: 'sensor_1_Val_2'
        response: dy
        weight: 0.5
  Parameters input file: input_params.yaml
  Analysis input file: input_rol2.yaml
  Functions:
    mu: mufield
    Neumann source dx: 'xtrac*n[y]'
    Neumann source dy: 'ytrac*n[y]'
    source dx: '0.0'
    gradmus: 'grad(mufield)[x]*grad(mufield)[x] + grad(mufield)[y]*grad(mufield)[y]'
...
